<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>jsTree test</title>
  <!-- 2 load the theme CSS file
  <link rel="stylesheet" href="dist/themes/default/style.min.css" />
  -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
</head>
<body>
  <!-- 3 setup a container element -->
  <div id="jstree">
    </ul>
  </div>
  <button>demo button</button>

  <!-- 4 include the jQuery library 
  <script src="dist/libs/jquery.js"></script>
  -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>

  <!-- 5 include the minified jstree source
  <script src="dist/jstree.min.js"></script>
  -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
  <script>
  $(function () {
    tree = {
      'core' : {
          'data' : [
          ]
      } 
    }
    // Note: The last digit "/" is very important. With "/", it is a folder. Without "/", it is a leaf node.
    // All the leaf node need the folder to be the parent.
    data = [ 
      "env/child1/env/",
      "env/child1/env/key1",
      "env/child1/key1",
      "env/child1/key2",
      "env/child1/",
      "env/child2/key1",
      "env/child2/key2",
      "env/child2/key3",
      "env/child2/key4/",
      "env/child2/key4/key5",
      "env/child2/",
      "env/",
    ];
    
    minlen = -1;
    picked = "";
    for(i =0; i<data.length; i++) {
        if(data[i].length < minlen || minlen == -1) {
            minlen = data[i].length;
            picked = data[i];
        }
    }
    
    tree.core.data.push({ "id" : picked, "parent" : "#", "text" : picked })
    xdata = data
    xdata.splice(xdata.indexOf(picked), 1)
    
    for(i =0; i<xdata.length; i++) {
        name = xdata[i]
        parent = ""
        if(name.substr(name.length-1,1) == '/') {
            xname = name.substr(0,name.length-1);
            parent = xname.substr(0,xname.lastIndexOf("/")+1)
        } else {
            parent = name.substr(0,name.lastIndexOf("/")+1)
        }
        tree.core.data.push({ "id" : name, "parent" : parent, "text" : name })
    }
    console.log('tree: ', tree);
    console.log ('tree.core:', tree.core);
    console.log ('tree.core.data:', tree.core.data);
    console.log ('tree.core.data.length:', tree.core.data.length);
    for (var i = 0; i < tree.core.data.length; i++) {
      console.log ('tree.core.data[i]:', tree.core.data[i]);
    }
    
    $('#jstree').jstree(tree);
    /*
    $('#jstree').jstree({ 'core' : {
      'data' : [
          {id: "env/", parent: "#", text: "env/"},
          {id: "env/child1/", parent: "env/", text: "env/child1/"},
          {id: "env/child2/", parent: "env/", text: "env/child2/"},
          {id: "env/child1/key1", parent: "env/child1/", text: "env/child1/key1"},
          {id: "env/child1/key2", parent: "env/child1/", text: "env/child1/key2"},
          {id: "env/child1/env/", parent: "env/child1/", text: "env/child1/env"},
          {id: "env/child2/key1", parent: "env/child2/", text: "env/child2/key1"},
          {id: "env/child2/key2", parent: "env/child2/", text: "env/child2/key2"},
          {id: "env/child1/env/key1", parent: "env/child1/env/", text: "env/child1/env/key1"},

          
          //{id: "env/child1/env", parent: "env/child1/", text: "env/child1/env"},
          //{id: "env/child1/env/key1", parent: "env/child1/env/", text: "env/child1/env/key1"},
          //{id: "env/child1/key1", parent: "env/child1/", text: "env/child1/key1"},
          //{id: "env/child1/key2", parent: "env/child1/", text: "env/child1/key2"},
          //{id: "env/child1/", parent: "env/", text: "env/child1/"},
          //{id: "env/child2/key1", parent: "env/child2/", text: "env/child2/key1"},
          //{id: "env/child2/key2", parent: "env/child2/", text: "env/child2/key2"},
          //{id: "env/child2/", parent: "env/", text: "env/child2/"}
        
      ]
    } });
    */ 
    /*
      $('#jstree').jstree({ 'core' : {
          'data' : [
            { "id" : "ajson1", "parent" : "#", "text" : "Simple root node" },
            { "id" : "ajson2", "parent" : "#", "text" : "Root node 2" },
            { "id" : "ajson3", "parent" : "ajson2", "text" : "Child 1" },
            { "id" : "ajson4", "parent" : "ajson2", "text" : "Child 2" },
          ]
      } });
    */
  });
  
  </script>
</body>
</html>